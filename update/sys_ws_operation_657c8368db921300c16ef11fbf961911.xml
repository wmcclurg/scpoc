<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>catalog</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
    // implement resource here
	//how do we create a ServiceRequest/RequestItem/etc via incoming call?
	gs.info('INCOMING Work Order From TELESOFT!!');
	var requestData = request.body.dataString;
	gs.info('TheData:'+requestData);
	var jsonObj = new global.JSON.parse(requestData);
	if(jsonObj == null){
		gs.info("this is unacceptble");
	}

		//we will issue a SC shopping cart ordernow api call.
	//first thing that we need to do is locate the requested_for data for the shopping cart.
	var userEmployeeId =jsonObj["userEmployeeId"];
	gs.info('user Employee ID'+userEmployeeId);
	var userEmail=jsonObj["userEmail"];
	
	var workOrderNumber = jsonObj["workOrderNumber"];
	//locate the user based on employee_id.
	var requestedForUserSysId = 0;
	var userRecord = new GlideRecord('sys_user');
//	userRecord.addQuery('employee_number',userEmployeeId);
	//For now - hard code the SN user record.
	//at some point I need to (re)set the import/transforms to get AMEREN users into the SN instance.
	//locate the user based on employee_number;
	//userRecord.addQuery('sys_id','71826bf03710200044e0bfc8bcbe5d3b');
	userRecord.addQuery('employee_number',userEmployeeId);
	userRecord.query();
	while(userRecord.next()){
		requestedForUser = userRecord.sys_id;
	}
	gs.info('REQUESTED_FOR_USER_SYS_ID:'+requestedForUser);
	//using the sample code...which I fully expect to fail...
	var cart = new sn_sc.CartJS();
//	cart.setRequestedFor(requestedForUser);
/* From the Sample Code - ordering an iphone 5
var therequest =
{
'sysparm_id': '0d08837237153000158bbfc8bcbe5d02',
'sysparm_quantity': '1',
'variables':{
'carrier': 'at_and_t_mobility',
'data_plan': '500MB',
'duration': 'eighteen_months',
'color': 'slate',
'storage': 'sixtyfour'
}
};
var cartDetails = cart.orderNow(therequest);
gs.info(cartDetails);*/
	
	
	var OrderRequest =
	{
	"sysparm_id": "f94aca10db521300c16ef11fbf96197a",
	"sysparm_requested_for" : requestedForUser.toString(),
	"sysparm_quantity": "1",
	"variables":{
		"connect_origination":"Yes"
	}
	};
	
		var testOrderRequest =
	{
	"sysparm_id": "f94aca10db521300c16ef11fbf96197a",
	"sysparm_requested_for" : "71826bf03710200044e0bfc8bcbe5d3b",
	"sysparm_quantity": "1",
	"variables":{
		"connect_origination":"Yes"
	}
	};
	/*	var OrderRequest =
	{
	'sysparm_id': '060f3afa3731300054b6a3549dbe5d3e',
	'sysparm_quantity': '1'
	};*/
	
	gs.info('created Order Request '+ JSON.stringify(OrderRequest));
	
	//when the order has been created..what workflow is activated?
	//set the sysid to this instances Apple ATT iphone 7 which is f94aca10db521300c16ef11fbf96197a
	var cartDetails = cart.addToCart(OrderRequest);
	gs.info('Show Cart Details');
	gs.info('theDetails'+ JSON.stringify(cartDetails));
	//cart.setRequestedFor(requestedForUser);
	gs.info("Requested For User is "+cart.getRequestedFor());
	gs.info('Checking Out');
	var checkOutInfo = {};
	//try{
		 checkOutInfo= cart.checkoutCart();
	//}catch(e) {
	//gs.info("cart_issue: "+ cartID +" has encountered an error : "+e); 
	//gs.debug(e);

	//}
	var str =  JSON.stringify(checkOutInfo);
	gs.info('The object' + str);

	var requestNumber = checkOutInfo.request_number;
	gs.info('REQUEST NUMBER:'+requestNumber);
	var responseItem=0;
	//when we get the Request Number, locate the RequestItem (should only be 1)
	var grRITM = new GlideRecord('sc_req_item');
	grRITM.addQuery('request', checkOutInfo.request_id);
	grRITM.query();
	while(grRITM.next()){
		gs.info('int thr grRITM loop');
		gs.info('grRITM sysId'+grRITM.sys_id);
		//return that RITMnumber in the response
		//update the RITM data with contact information
		//update RITM correlationID with the workorderID
		responseItem = grRITM.number;
		grRITM.correlation_id=workOrderNumber;
		grRITM.update('set correlationId to workordernumber');
		gs.info('after update grRITM sysId'+grRITM.sys_id);
	 }


	//RITM notes - how to update
	var responseBody = {};
	responseBody.display_value = responseItem;
	response.setBody(responseBody);
	response.setStatus(202);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_145141_connect/catalogintegration</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-05-23 00:02:48</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>657c8368db921300c16ef11fbf961911</sys_id>
        <sys_mod_count>94</sys_mod_count>
        <sys_name>catalog</sys_name>
        <sys_package display_value="Connect" source="x_145141_connect">eec7cfdddb101300c16ef11fbf961930</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Connect">eec7cfdddb101300c16ef11fbf961930</sys_scope>
        <sys_update_name>sys_ws_operation_657c8368db921300c16ef11fbf961911</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-06-19 00:18:23</sys_updated_on>
        <web_service_definition display_value="catalogintegration">6e978ba4db921300c16ef11fbf9619e5</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
